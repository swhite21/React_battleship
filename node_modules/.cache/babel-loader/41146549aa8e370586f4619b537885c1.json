{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Desktop/battleship/src/board.js\";\nimport React from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport SingleSquare from './singleSquare';\nimport PlaceShipsPopUp from './placeShipsPopup';\nimport InGameMenu from './ingamemenu.js';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onHoverHighlight = (index, boat) => {\n      let _this$state = this.state,\n          boardSpaces = _this$state.boardSpaces,\n          destroyer = _this$state.destroyer,\n          submarine = _this$state.submarine,\n          smallBoat = _this$state.smallBoat,\n          boatSelector = _this$state.boatSelector,\n          shipList = _this$state.shipList,\n          boatOut = _this$state.boatOut;\n      let outofBounds = this.outofBounds,\n          outofBoundsReset = this.outofBoundsReset;\n      let boatLng = shipList[boatSelector][1].length;\n      console.log(shipList[boatSelector][1]);\n      let adjacentIndexes = [];\n\n      for (let i = 0; i < boatLng; i++) {\n        var num = i * 10;\n        adjacentIndexes.push(index - num);\n      }\n\n      adjacentIndexes.map(value => {\n        //prevents player for placing ships out of bounds\n        if (value >= 0 && value <= 99) {\n          document.getElementById(value).style.color = \"green\";\n\n          function returnColor() {\n            document.getElementById(value).style.color = \"\";\n          }\n\n          setTimeout(returnColor, 700);\n          outofBoundsReset();\n        } else {\n          outofBounds();\n          adjacentIndexes.map(value => {\n            if (value >= 0 && value <= 99) {\n              document.getElementById(value).style.color = \"red\";\n\n              function returnColor() {\n                document.getElementById(value).style.color = \"\";\n              }\n            }\n          });\n        }\n      });\n      console.log(\"hover on index \".concat(index, \",\").concat(adjacentIndexes));\n    };\n\n    this.powerUpChanger = currentPlayer => {\n      let _this$state2 = this.state,\n          player1 = _this$state2.player1,\n          player2 = _this$state2.player2,\n          powerUps = _this$state2.powerUps;\n\n      if (currentPlayer == 1) {\n        if (player1.powerup == powerUps.length - 1) {\n          player1.powerup = 0;\n          this.setState({\n            player1\n          });\n        } else {\n          player1.powerup = player1.powerup + 1;\n          this.setState({\n            player1\n          });\n        }\n      } else if (currentPlayer == 2) {\n        if (player2.powerup == powerUps.length - 1) {\n          player2.powerup = 0;\n          this.setState({\n            player2\n          });\n        } else {\n          player2.powerup = player2.powerup + 1;\n          this.setState({\n            player2\n          });\n        }\n      }\n    };\n\n    this.boatPlaced = () => {\n      let _this$state3 = this.state,\n          player1 = _this$state3.player1,\n          player2 = _this$state3.player2;\n      let newNum = player1.boatMap.map(value => {\n        if (value != \"\") {\n          return 1;\n        }\n      });\n      newNum = newNum.filter(value => {\n        return value != \"\";\n      });\n      console.log(\"new num is \".concat(newNum));\n    };\n\n    this.placeBoat = clickedIndex => {\n      let _this$state4 = this.state,\n          player1 = _this$state4.player1,\n          player2 = _this$state4.player2,\n          boatSelector = _this$state4.boatSelector,\n          currentPlayer = _this$state4.currentPlayer,\n          shipList = _this$state4.shipList;\n      let boatPlaced = this.boatPlaced;\n      let boatLng = shipList[boatSelector][1].length;\n      let adjacentIndexes = [];\n\n      for (let i = 0; i < boatLng; i++) {\n        var num = i * 10;\n        adjacentIndexes.push(clickedIndex - num);\n      }\n\n      player1.boatMap[boatSelector] = adjacentIndexes;\n      this.setState({\n        player1\n      });\n      boatPlaced();\n      console.log(\"player1 boats placed at \".concat(player1.boatMap));\n    };\n\n    this.boatSelectorChange = () => {\n      let _this$state5 = this.state,\n          boatSelector = _this$state5.boatSelector,\n          shipList = _this$state5.shipList;\n\n      if (boatSelector < shipList.length - 1) {\n        this.setState({\n          boatSelector: boatSelector + 1\n        });\n      } else {\n        this.setState({\n          boatSelector: 0\n        });\n      }\n    };\n\n    this.startGame = () => {\n      let _this$state6 = this.state,\n          boardSpaces = _this$state6.boardSpaces,\n          populatedBoard = _this$state6.populatedBoard,\n          squareStateColor = _this$state6.squareStateColor,\n          placementMode = _this$state6.placementMode;\n      let onHoverHighlight = this.onHoverHighlight,\n          placeBoat = this.placeBoat;\n      let boardpop = boardSpaces.map(maphandler);\n      this.setState({\n        placementMode: true\n      });\n\n      function maphandler(value, index) {\n        return React.createElement(SingleSquare, {\n          value: value,\n          squareStateColor: squareStateColor,\n          onHoverHighlight: onHoverHighlight,\n          placeBoat: placeBoat,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      }\n\n      this.setState({\n        populatedBoard: boardpop\n      });\n    };\n\n    this.placmentPopUpHandler = () => {\n      let placeShipsShow = this.state.placeShipsShow;\n      this.setState({\n        placeShipsShow: false\n      });\n    };\n\n    this.outofBounds = () => {\n      console.log(\"ran out\");\n      let boatOut = this.state.boatOut;\n      this.setState({\n        boatOut: true\n      });\n    };\n\n    this.outofBoundsReset = () => {\n      console.log(\"ran reset\");\n      let boatOut = this.state.boatOut;\n      this.setState({\n        boatOut: false\n      });\n    };\n\n    this.state = {\n      boardSpaces: [\"1A\", \"2A\", \"3A\", \"4A\", \"5A\", \"6A\", \"7A\", \"8A\", \"9A\", \"10A\", \"1B\", \"2B\", \"3B\", \"4B\", \"5B\", \"6B\", \"7B\", \"8B\", \"9B\", \"10B\", \"1C\", \"2C\", \"3C\", \"4C\", \"5C\", \"6C\", \"7C\", \"8C\", \"9C\", \"10C\", \"1D\", \"2D\", \"3D\", \"4D\", \"5D\", \"6D\", \"7D\", \"8D\", \"9D\", \"10D\", \"1E\", \"2E\", \"3E\", \"4E\", \"5E\", \"6E\", \"7E\", \"8E\", \"9E\", \"10E\", \"1F\", \"2F\", \"3F\", \"4F\", \"5F\", \"6F\", \"7F\", \"8F\", \"9F\", \"10F\", \"1G\", \"2G\", \"3G\", \"4G\", \"5G\", \"6G\", \"7G\", \"8G\", \"9G\", \"10G\", \"1H\", \"2H\", \"3H\", \"4H\", \"5H\", \"6H\", \"7H\", \"8H\", \"9H\", \"10H\", \"1I\", \"2I\", \"3I\", \"4I\", \"5I\", \"6I\", \"7I\", \"8I\", \"9I\", \"10I\", \"1J\", \"2J\", \"3J\", \"4J\", \"5J\", \"6J\", \"7J\", \"8J\", \"9J\", \"10J\"],\n      powerUps: [\"Bomber\", \"Collision\", \"Radar\"],\n      populatedBoard: [React.createElement(\"singleSquare\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })],\n      player1: {\n        boatsleft: 3,\n        boatstoPlace: 3,\n        turn: false,\n        powerup: 0,\n        boatMap: [[], [], []]\n      },\n      player2: {\n        boatsleft: 3,\n        boatstoPlace: 3,\n        turn: false,\n        powerup: 0,\n        boatMap: [[], [], []]\n      },\n      boatSelector: 0,\n      shipList: [[\"destroyer\", [\"D\", \"D\", \"D\", \"D\", \"D\"]], [\"submarine\", [\"S\", \"S\", \"S\", \"S\"]], [\"smallBoat\", [\"B\", \"B\"]]],\n      //passed to each space to determine the squares state in color\n      squareStateColor: [\"blue\", \"grey\", \"red\"],\n      placeShipsShow: true,\n      placementMode: false,\n      currentPlayer: 1,\n      boatOut: false\n    };\n  }\n\n  render() {\n    let _this$state7 = this.state,\n        powerUps = _this$state7.powerUps,\n        player1 = _this$state7.player1,\n        player2 = _this$state7.player2,\n        boatOut = _this$state7.boatOut,\n        placementMode = _this$state7.placementMode,\n        populatedBoard = _this$state7.populatedBoard,\n        placeShipsShow = _this$state7.placeShipsShow,\n        currentPlayer = _this$state7.currentPlayer,\n        shipList = _this$state7.shipList,\n        boatSelector = _this$state7.boatSelector;\n    let placmentPopUpHandler = this.placmentPopUpHandler,\n        startGame = this.startGame,\n        boatSelectorChange = this.boatSelectorChange,\n        onHoverHighlight = this.onHoverHighlight,\n        powerUpChanger = this.powerUpChanger;\n    return React.createElement(\"div\", {\n      className: \"board-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, placementMode && React.createElement(InGameMenu, {\n      shipList: shipList,\n      powerUpChanger: powerUpChanger,\n      onHoverHighlight: onHoverHighlight,\n      currentPlayer: currentPlayer,\n      boatSelectorChange: boatSelectorChange,\n      boatSelector: boatSelector,\n      player1: player1,\n      player2: player2,\n      powerUps: powerUps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), placeShipsShow && React.createElement(PlaceShipsPopUp, {\n      placmentPopUpHandler: placmentPopUpHandler,\n      currentPlayer: currentPlayer,\n      startGame: startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, boatOut && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      id: \"out-of-bounds\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Out of bounds\"), populatedBoard));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/sebastian/Desktop/battleship/src/board.js"],"names":["React","Container","Button","SingleSquare","PlaceShipsPopUp","InGameMenu","Board","Component","constructor","props","onHoverHighlight","index","boat","state","boardSpaces","destroyer","submarine","smallBoat","boatSelector","shipList","boatOut","outofBounds","outofBoundsReset","boatLng","length","console","log","adjacentIndexes","i","num","push","map","value","document","getElementById","style","color","returnColor","setTimeout","powerUpChanger","currentPlayer","player1","player2","powerUps","powerup","setState","boatPlaced","newNum","boatMap","filter","placeBoat","clickedIndex","boatSelectorChange","startGame","populatedBoard","squareStateColor","placementMode","boardpop","maphandler","placmentPopUpHandler","placeShipsShow","boatsleft","boatstoPlace","turn","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Container, Button} from 'react-bootstrap'\nimport SingleSquare from './singleSquare'\nimport PlaceShipsPopUp from './placeShipsPopup'\nimport InGameMenu from './ingamemenu.js'\n\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      boardSpaces:[ \"1A\",\"2A\",\"3A\",\"4A\",\"5A\",\"6A\",\"7A\",\"8A\",\"9A\",\"10A\",\n                    \"1B\",\"2B\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"10B\",\n                    \"1C\",\"2C\",\"3C\",\"4C\",\"5C\",\"6C\",\"7C\",\"8C\",\"9C\",\"10C\",\n                    \"1D\",\"2D\",\"3D\",\"4D\",\"5D\",\"6D\",\"7D\",\"8D\",\"9D\",\"10D\",\n                    \"1E\",\"2E\",\"3E\",\"4E\",\"5E\",\"6E\",\"7E\",\"8E\",\"9E\",\"10E\",\n                    \"1F\",\"2F\",\"3F\",\"4F\",\"5F\",\"6F\",\"7F\",\"8F\",\"9F\",\"10F\",\n                    \"1G\",\"2G\",\"3G\",\"4G\",\"5G\",\"6G\",\"7G\",\"8G\",\"9G\",\"10G\",\n                    \"1H\",\"2H\",\"3H\",\"4H\",\"5H\",\"6H\",\"7H\",\"8H\",\"9H\",\"10H\",\n                    \"1I\",\"2I\",\"3I\",\"4I\",\"5I\",\"6I\",\"7I\",\"8I\",\"9I\",\"10I\",\n                    \"1J\",\"2J\",\"3J\",\"4J\",\"5J\",\"6J\",\"7J\",\"8J\",\"9J\",\"10J\"\n                  ],\n      powerUps: [\"Bomber\", \"Collision\", \"Radar\"],\n      populatedBoard: [<singleSquare />],\n      player1: {  boatsleft: 3,\n                  boatstoPlace: 3,\n                  turn: false,\n                  powerup: 0,\n                  boatMap: [[],[],[]]\n                },\n      player2: {  boatsleft: 3,\n                  boatstoPlace: 3,\n                  turn: false,\n                  powerup: 0,\n                  boatMap: [[],[],[]]\n                },\n      boatSelector: 0,\n      shipList: [[\"destroyer\",[\"D\",\"D\",\"D\",\"D\",\"D\"]], [\"submarine\",[\"S\",\"S\",\"S\",\"S\"]], [\"smallBoat\",[\"B\",\"B\"]]],\n    //passed to each space to determine the squares state in color\n      squareStateColor: [\"blue\",\"grey\",\"red\"],\n      placeShipsShow: true,\n      placementMode: false,\n      currentPlayer: 1,\n      boatOut: false\n    }\n  }\n  onHoverHighlight = (index, boat)=>{\n    let{boardSpaces, destroyer, submarine, smallBoat, boatSelector, shipList, boatOut}=this.state\n    let{outofBounds, outofBoundsReset}=this\n    let boatLng = shipList[boatSelector][1].length\n    console.log(shipList[boatSelector][1]);\n    let adjacentIndexes = []\n\n      for(let i = 0; i < boatLng; i++){\n        var num = i*10\n        adjacentIndexes.push(index-num)\n      }\n\n      adjacentIndexes.map((value)=>{\n        //prevents player for placing ships out of bounds\n          if(value >= 0 && value <= 99){\n        document.getElementById(value).style.color = \"green\"\n        function returnColor(){\n          document.getElementById(value).style.color = \"\"\n        }\n        setTimeout(returnColor, 700)\n        outofBoundsReset()\n      }else{\n      outofBounds()\n        adjacentIndexes.map((value)=>{\n          if(value >= 0 && value <= 99){\n          document.getElementById(value).style.color = \"red\"\n          function returnColor(){\n            document.getElementById(value).style.color = \"\"\n          }}\n        })\n\n      }\n      })\n    console.log(`hover on index ${index},${adjacentIndexes}`);\n\n  }\n  powerUpChanger = (currentPlayer) =>{\n    let{player1, player2, powerUps}= this.state\n\n      if(currentPlayer == 1){\n        if(player1.powerup == powerUps.length-1){\n          player1.powerup = 0\n          this.setState({player1})\n        }else{\n        player1.powerup = player1.powerup +1\n        this.setState({player1})\n        }\n      }else if (currentPlayer == 2){\n        if(player2.powerup == powerUps.length-1){\n          player2.powerup = 0\n          this.setState({player2})\n        }else{\n        player2.powerup = player2.powerup +1\n        this.setState({player2})\n        }\n      }\n  }\n  boatPlaced=()=>{\n    let{player1, player2}=this.state\n\n    let newNum = player1.boatMap.map((value)=>{\n      if(value != \"\"){\n        return 1\n      }\n    })\n    newNum = newNum.filter((value)=>{\n      return value != \"\"\n    })\n    console.log(`new num is ${newNum}`);\n  }\n  placeBoat =(clickedIndex)=>{\n  let{player1, player2, boatSelector, currentPlayer, shipList}=this.state\n  let{boatPlaced}=this\n  let boatLng = shipList[boatSelector][1].length\n  let adjacentIndexes = []\n\n  for(let i = 0; i < boatLng; i++){\n    var num = i*10\n    adjacentIndexes.push(clickedIndex-num)\n  }\n  player1.boatMap[boatSelector] = adjacentIndexes\n  this.setState({player1})\n  boatPlaced()\n\n\n  console.log(`player1 boats placed at ${player1.boatMap}`);\n  }\n  boatSelectorChange = ()=>{\n    let{boatSelector, shipList}=this.state\n      if (boatSelector < shipList.length - 1){\n      this.setState({boatSelector: boatSelector+1})\n    }else{\n      this.setState({boatSelector: 0})\n    }\n  }\n  startGame =()=>{\n    let{boardSpaces, populatedBoard, squareStateColor, placementMode}=this.state\n    let{onHoverHighlight, placeBoat}=this\n    let boardpop = boardSpaces.map(maphandler)\n    this.setState({placementMode:true})\n    function maphandler(value, index){\n      return <SingleSquare value={value}\n              squareStateColor={squareStateColor}\n              onHoverHighlight={onHoverHighlight}\n              placeBoat={placeBoat}\n              index={index}\n\n      />\n    }\n    this.setState({populatedBoard: boardpop})\n  }\n  placmentPopUpHandler =()=>{\n    let{placeShipsShow}=this.state\n    this.setState({placeShipsShow: false})\n  }\n  outofBounds =()=>{\n    console.log(\"ran out\");\n    let{boatOut}=this.state\n    this.setState({boatOut:true})\n  }\n  outofBoundsReset =()=>{\n    console.log(\"ran reset\");\n    let{boatOut}=this.state\n    this.setState({boatOut:false})\n  }\n\n  render(){\n    let{powerUps, player1, player2, boatOut, placementMode, populatedBoard, placeShipsShow, currentPlayer, shipList, boatSelector}=this.state\n    let{placmentPopUpHandler, startGame, boatSelectorChange, onHoverHighlight, powerUpChanger}=this\n    return(\n    <div className=\"board-bg\">\n    { placementMode &&<InGameMenu shipList={shipList}\n              powerUpChanger={powerUpChanger}\n              onHoverHighlight={onHoverHighlight}\n              currentPlayer={currentPlayer}\n              boatSelectorChange={boatSelectorChange}\n              boatSelector={boatSelector}\n              player1={player1}\n              player2={player2}\n              powerUps={powerUps}\n    />}\n      {placeShipsShow && <PlaceShipsPopUp\n        placmentPopUpHandler={placmentPopUpHandler}\n        currentPlayer={currentPlayer}\n        startGame={startGame}\n        />\n      }\n\n    <div id=\"board\">\n    {boatOut && <div className=\"alert alert-danger\" id=\"out-of-bounds\" role=\"alert\">Out of bounds</div>}\n    {populatedBoard}\n    </div>\n    </div>\n  );\n  }\n\n}\nexport default Board\n"]},"metadata":{},"sourceType":"module"}