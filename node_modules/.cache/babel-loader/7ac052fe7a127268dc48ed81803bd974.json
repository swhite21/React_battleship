{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Desktop/battleship/src/singleSquare.js\";\nimport React from 'react';\n\nclass SingleSquare extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clickHandler = () => {\n      let _this$state = this.state,\n          style = _this$state.style,\n          clicked = _this$state.clicked;\n      let _this$props = this.props,\n          placeBoat = _this$props.placeBoat,\n          index = _this$props.index,\n          value = _this$props.value;\n\n      if (clicked == false) {\n        this.setState({\n          style: {\n            background: \"blue\"\n          }\n        });\n        this.setState({\n          clicked: true\n        });\n      } else if (clicked == true) {\n        this.setState({\n          style: {\n            background: \"\"\n          }\n        });\n        this.setState({\n          clicked: false\n        });\n        document.getElementByClassName(\"single-square\").style.backgroundColor = \"red\";\n      }\n\n      placeBoat(index);\n    };\n\n    this.hoverHandler = () => {\n      let _this$props2 = this.props,\n          onHoverHighlight = _this$props2.onHoverHighlight,\n          index = _this$props2.index;\n      onHoverHighlight(index);\n    };\n\n    this.state = {\n      style: {\n        background: \"\"\n      },\n      hover: false,\n      clicked: false\n    };\n  }\n\n  render() {\n    let style = this.state.style;\n    let _this$props3 = this.props,\n        value = _this$props3.value,\n        index = _this$props3.index;\n    return React.createElement(\"div\", {\n      style: style,\n      className: \"single-square\",\n      onMouseOver: this.hoverHandler,\n      onClick: this.clickHandler,\n      id: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, value);\n  }\n\n}\n\nexport default SingleSquare;","map":{"version":3,"sources":["/home/sebastian/Desktop/battleship/src/singleSquare.js"],"names":["React","SingleSquare","Component","constructor","props","clickHandler","state","style","clicked","placeBoat","index","value","setState","background","document","getElementByClassName","backgroundColor","hoverHandler","onHoverHighlight","hover","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,YATkB,GASL,MAAI;AAAA,wBACI,KAAKC,KADT;AAAA,UACZC,KADY,eACZA,KADY;AAAA,UACLC,OADK,eACLA,OADK;AAAA,wBAEY,KAAKJ,KAFjB;AAAA,UAEbK,SAFa,eAEbA,SAFa;AAAA,UAEFC,KAFE,eAEFA,KAFE;AAAA,UAEKC,KAFL,eAEKA,KAFL;;AAGf,UAAIH,OAAO,IAAI,KAAf,EAAqB;AACnB,aAAKI,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE;AAACM,YAAAA,UAAU,EAAE;AAAb;AAAR,SAAd;AACA,aAAKD,QAAL,CAAc;AAACJ,UAAAA,OAAO,EAAC;AAAT,SAAd;AACD,OAHD,MAGM,IAAGA,OAAO,IAAI,IAAd,EAAmB;AACvB,aAAKI,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE;AAACM,YAAAA,UAAU,EAAE;AAAb;AAAR,SAAd;AACA,aAAKD,QAAL,CAAc;AAACJ,UAAAA,OAAO,EAAC;AAAT,SAAd;AACAM,QAAAA,QAAQ,CAACC,qBAAT,CAA+B,eAA/B,EAAgDR,KAAhD,CAAsDS,eAAtD,GAAuE,KAAvE;AACD;;AACDP,MAAAA,SAAS,CAACC,KAAD,CAAT;AACD,KArBiB;;AAAA,SAsBlBO,YAtBkB,GAsBL,MAAI;AAAA,yBACc,KAAKb,KADnB;AAAA,UACZc,gBADY,gBACZA,gBADY;AAAA,UACMR,KADN,gBACMA,KADN;AAEjBQ,MAAAA,gBAAgB,CAACR,KAAD,CAAhB;AACC,KAzBiB;;AAEhB,SAAKJ,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC;AAACM,QAAAA,UAAU,EAAE;AAAb,OADG;AAETM,MAAAA,KAAK,EAAE,KAFE;AAGTX,MAAAA,OAAO,EAAE;AAHA,KAAX;AAMD;;AAkBDY,EAAAA,MAAM,GAAE;AAAA,QACFb,KADE,GACK,KAAKD,KADV,CACFC,KADE;AAAA,uBAEW,KAAKH,KAFhB;AAAA,QAEFO,KAFE,gBAEFA,KAFE;AAAA,QAEID,KAFJ,gBAEIA,KAFJ;AAGN,WACE;AAAK,MAAA,KAAK,EAAEH,KAAZ;AAAmB,MAAA,SAAS,EAAC,eAA7B;AAA6C,MAAA,WAAW,EAAE,KAAKU,YAA/D;AAA6E,MAAA,OAAO,EAAE,KAAKZ,YAA3F;AAAyG,MAAA,EAAE,EAAEK,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,KADD,CADF;AAKD;;AAnCuC;;AAqC1C,eAAeV,YAAf","sourcesContent":["import React from 'react'\n\nclass SingleSquare extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      style:{background: \"\"},\n      hover: false,\n      clicked: false,\n\n    }\n  }\n  clickHandler=()=>{\n  let {style, clicked}=this.state\n  let{placeBoat, index, value}=this.props\n    if (clicked == false){\n      this.setState({style: {background: \"blue\"}})\n      this.setState({clicked:true})\n    }else if(clicked == true){\n      this.setState({style: {background: \"\"}})\n      this.setState({clicked:false})\n      document.getElementByClassName(\"single-square\").style.backgroundColor =\"red\"\n    }\n    placeBoat(index)\n  }\n  hoverHandler=()=>{\n  let {onHoverHighlight, index,}=this.props\n  onHoverHighlight(index)\n  }\n  render(){\n    let{style}=this.state\n    let{value,index}=this.props\n    return(\n      <div style={style} className=\"single-square\" onMouseOver={this.hoverHandler} onClick={this.clickHandler} id={index}>\n      {value}\n      </div>\n    );\n  }\n}\nexport default SingleSquare\n"]},"metadata":{},"sourceType":"module"}