{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Desktop/battleship/src/board.js\";\nimport React from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport SingleSquare from './singleSquare';\nimport PlaceShipsPopUp from './placeShipsPopup';\nimport InGameMenu from './ingamemenu.js';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onHoverHighlight = (index, boat) => {\n      let _this$state = this.state,\n          boardSpaces = _this$state.boardSpaces,\n          destroyer = _this$state.destroyer,\n          submarine = _this$state.submarine,\n          smallBoat = _this$state.smallBoat;\n      console.log(\"hover on index \".concat(index));\n    };\n\n    this.boatSelectorChange = () => {\n      let _this$state2 = this.state,\n          boatSelector = _this$state2.boatSelector,\n          shipList = _this$state2.shipList;\n\n      if (boatSelector < shipList.length - 1) {\n        this.setState({\n          boatSelector: boatSelector + 1\n        });\n      } else {\n        this.setState({\n          boatSelector: 0\n        });\n      }\n    };\n\n    this.startGame = () => {\n      let _this$state3 = this.state,\n          boardSpaces = _this$state3.boardSpaces,\n          populatedBoard = _this$state3.populatedBoard,\n          squareStateColor = _this$state3.squareStateColor,\n          placementMode = _this$state3.placementMode;\n      let onHoverHighlight = this.onHoverHighlight;\n      let boardpop = boardSpaces.map(maphandler);\n      this.setState({\n        placementMode: true\n      });\n\n      function maphandler(value, index) {\n        return React.createElement(SingleSquare, {\n          key: value,\n          squareStateColor: squareStateColor,\n          onHoverHighlight: onHoverHighlight,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }\n\n      this.setState({\n        populatedBoard: boardpop\n      });\n    };\n\n    this.placmentPopUpHandler = () => {\n      let placeShipsShow = this.state.placeShipsShow;\n      this.setState({\n        placeShipsShow: false\n      });\n    };\n\n    this.state = {\n      boardSpaces: [\"1A\", \"2A\", \"3A\", \"4A\", \"5A\", \"6A\", \"7A\", \"8A\", \"9A\", \"10A\", \"1B\", \"2B\", \"3B\", \"4B\", \"5B\", \"6B\", \"7B\", \"8B\", \"9B\", \"10B\", \"1C\", \"2C\", \"3C\", \"4C\", \"5C\", \"6C\", \"7C\", \"8C\", \"9C\", \"10C\", \"1D\", \"2D\", \"3D\", \"4D\", \"5D\", \"6D\", \"7D\", \"8D\", \"9D\", \"10D\", \"1E\", \"2E\", \"3E\", \"4E\", \"5E\", \"6E\", \"7E\", \"8E\", \"9E\", \"10E\", \"1F\", \"2F\", \"3F\", \"4F\", \"5F\", \"6F\", \"7F\", \"8F\", \"9F\", \"10F\", \"1G\", \"2G\", \"3G\", \"4G\", \"5G\", \"6G\", \"7G\", \"8G\", \"9G\", \"10G\", \"1H\", \"2H\", \"3H\", \"4H\", \"5H\", \"6H\", \"7H\", \"8H\", \"9H\", \"10H\", \"1I\", \"2I\", \"3I\", \"4I\", \"5I\", \"6I\", \"7I\", \"8I\", \"9I\", \"10I\", \"1J\", \"2J\", \"3J\", \"4J\", \"5J\", \"6J\", \"7J\", \"8J\", \"9J\", \"10J\"],\n      populatedBoard: [React.createElement(\"singleSquare\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })],\n      boatSelector: 0,\n      shipList: [\"destroyer\", \"submarine\", \"smallBoat\"],\n      destroyer: [\"D\", \"D\", \"D\", \"D\", \"D\"],\n      submarine: [\"S\", \"S\", \"S\", \"S\"],\n      smallBoat: [\"B\", \"B\", \"B\", \"B\"],\n      //passed to each space to determine the squares state in color\n      squareStateColor: [\"blue\", \"grey\", \"red\"],\n      placeShipsShow: true,\n      placementMode: false,\n      currentPlayer: 1\n    };\n  }\n\n  render() {\n    let _this$state4 = this.state,\n        placementMode = _this$state4.placementMode,\n        populatedBoard = _this$state4.populatedBoard,\n        placeShipsShow = _this$state4.placeShipsShow,\n        currentPlayer = _this$state4.currentPlayer,\n        shipList = _this$state4.shipList,\n        boatSelector = _this$state4.boatSelector;\n    let placmentPopUpHandler = this.placmentPopUpHandler,\n        startGame = this.startGame,\n        boatSelectorChange = this.boatSelectorChange,\n        onHoverHighlight = this.onHoverHighlight;\n    return React.createElement(\"div\", {\n      className: \"board-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, placementMode && React.createElement(InGameMenu, {\n      shipList: shipList,\n      onHoverHighlight: onHoverHighlight,\n      currentPlayer: currentPlayer,\n      boatSelectorChange: boatSelectorChange,\n      boatSelector: boatSelector,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), placeShipsShow && React.createElement(PlaceShipsPopUp, {\n      placmentPopUpHandler: placmentPopUpHandler,\n      currentPlayer: currentPlayer,\n      startGame: startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, populatedBoard));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/sebastian/Desktop/battleship/src/board.js"],"names":["React","Container","Button","SingleSquare","PlaceShipsPopUp","InGameMenu","Board","Component","constructor","props","onHoverHighlight","index","boat","state","boardSpaces","destroyer","submarine","smallBoat","console","log","boatSelectorChange","boatSelector","shipList","length","setState","startGame","populatedBoard","squareStateColor","placementMode","boardpop","map","maphandler","value","placmentPopUpHandler","placeShipsShow","currentPlayer","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Container, Button} from 'react-bootstrap'\nimport SingleSquare from './singleSquare'\nimport PlaceShipsPopUp from './placeShipsPopup'\nimport InGameMenu from './ingamemenu.js'\n\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      boardSpaces:[ \"1A\",\"2A\",\"3A\",\"4A\",\"5A\",\"6A\",\"7A\",\"8A\",\"9A\",\"10A\",\n                    \"1B\",\"2B\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"10B\",\n                    \"1C\",\"2C\",\"3C\",\"4C\",\"5C\",\"6C\",\"7C\",\"8C\",\"9C\",\"10C\",\n                    \"1D\",\"2D\",\"3D\",\"4D\",\"5D\",\"6D\",\"7D\",\"8D\",\"9D\",\"10D\",\n                    \"1E\",\"2E\",\"3E\",\"4E\",\"5E\",\"6E\",\"7E\",\"8E\",\"9E\",\"10E\",\n                    \"1F\",\"2F\",\"3F\",\"4F\",\"5F\",\"6F\",\"7F\",\"8F\",\"9F\",\"10F\",\n                    \"1G\",\"2G\",\"3G\",\"4G\",\"5G\",\"6G\",\"7G\",\"8G\",\"9G\",\"10G\",\n                    \"1H\",\"2H\",\"3H\",\"4H\",\"5H\",\"6H\",\"7H\",\"8H\",\"9H\",\"10H\",\n                    \"1I\",\"2I\",\"3I\",\"4I\",\"5I\",\"6I\",\"7I\",\"8I\",\"9I\",\"10I\",\n                    \"1J\",\"2J\",\"3J\",\"4J\",\"5J\",\"6J\",\"7J\",\"8J\",\"9J\",\"10J\"\n                  ],\n      populatedBoard: [<singleSquare />],\n      boatSelector: 0,\n      shipList: [\"destroyer\", \"submarine\", \"smallBoat\"],\n      destroyer:[\"D\",\"D\",\"D\",\"D\",\"D\"],\n      submarine:[\"S\",\"S\",\"S\",\"S\"],\n      smallBoat:[\"B\",\"B\",\"B\",\"B\"],\n    //passed to each space to determine the squares state in color\n      squareStateColor: [\"blue\",\"grey\",\"red\"],\n      placeShipsShow: true,\n      placementMode: false,\n      currentPlayer: 1\n    }\n  }\n  onHoverHighlight = (index, boat)=>{\n    let{boardSpaces, destroyer, submarine, smallBoat}=this.state\n\n    console.log(`hover on index ${index}`);\n\n  }\n  boatSelectorChange = ()=>{\n    let{boatSelector, shipList}=this.state\n      if (boatSelector < shipList.length - 1){\n      this.setState({boatSelector: boatSelector+1})\n    }else{\n      this.setState({boatSelector: 0})\n    }\n  }\n  startGame =()=>{\n    let{boardSpaces, populatedBoard, squareStateColor, placementMode}=this.state\n    let{onHoverHighlight}=this\n    let boardpop = boardSpaces.map(maphandler)\n    this.setState({placementMode:true})\n    function maphandler(value, index){\n      return <SingleSquare key={value}\n              squareStateColor={squareStateColor}\n              onHoverHighlight={onHoverHighlight}\n              index={index}\n\n      />\n    }\n    this.setState({populatedBoard: boardpop})\n  }\n  placmentPopUpHandler =()=>{\n    let{placeShipsShow}=this.state\n    this.setState({placeShipsShow: false})\n  }\n  render(){\n    let{ placementMode, populatedBoard, placeShipsShow, currentPlayer, shipList, boatSelector}=this.state\n    let{placmentPopUpHandler, startGame, boatSelectorChange, onHoverHighlight}=this\n    return(\n    <div className=\"board-bg\">\n    { placementMode &&<InGameMenu shipList={shipList}\n              onHoverHighlight={onHoverHighlight}\n              currentPlayer={currentPlayer}\n              boatSelectorChange={boatSelectorChange}\n              boatSelector={boatSelector}\n    />}\n      {placeShipsShow && <PlaceShipsPopUp\n        placmentPopUpHandler={placmentPopUpHandler}\n        currentPlayer={currentPlayer}\n        startGame={startGame}\n        />\n      }\n    <div id=\"board\">\n    {populatedBoard}\n    </div>\n    </div>\n  );\n  }\n\n}\nexport default Board\n"]},"metadata":{},"sourceType":"module"}